apiVersion: v1
kind: Service
metadata:
  labels:
    app: "drc-frontend-prod"
    sys: "drc-prod"
  name: "drc-frontend-prod"
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: "drc-frontend-prod"
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "drc-frontend-prod"
  labels:
    sys: "drc-prod"
spec:
  replicas: 1 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: "drc-frontend-prod"
        sys: "drc-prod"
    spec:
      containers:
      - name: "drc-frontend-prod"
        image: "siuyin/drc-frontend:v26"
        env:
        - name: STAGE
          value: "prod"
        - name: NATS_SERVER
          value: "nats://nats-prod:4222"
        - name: NATS_SUBJECT_SUBMISSION_INPUT
          value: drc.submission.input
        - name: NATS_SUBJECT_SUBMISSION_STATUS_REQUESTS
          value: drc.submission-status.requests
        - name: POLL_TRIES
          value: "5"
        - name: NATS_SUBJECT_DRC_LOGGER_REPORTER_SUBMISSIONS_LIST
          value: "drc.logger-reporter.submissions.list"
        - name: NATS_SUBJECT_DRC_LOGGER_REPORTER_SUBMISSIONS_GET
          value: "drc.logger-reporter.submissions.get"
        - name: CLEAN_ASSET_DB_SERVICE_HOST
          value: "drc-clean-asset-db-prod"
        - name: CLEAN_ASSET_DB_SERVICE_PORT
          value: "8080"
        ports:
        - containerPort: 8080
